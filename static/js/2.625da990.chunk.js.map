{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialogs","dialogsItem","active","dialog","messages","message","Dialog","props","react_default","a","createElement","className","s","dist","to","id","name","Message","DialogsReduxForm","reduxForm","form","maxLength300","maxLengthCreator","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","Dialogs","dialogsElement","dialogsPage","map","d","Dialogs_Dialog_Dialog","key","messageElements","m","Dialogs_Message_Message","values","AddMessage","newMessageBody","compose","connect","state","dispatch","AddMessageActionCreater","withAuthRedirectComponent"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,YAAA,6BAAAC,OAAA,wBAAAC,OAAA,wBAAAC,SAAA,0BAAAC,QAAA,4KCWHC,EARA,SAACC,GACd,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAET,QAChBK,EAAAC,EAAAC,cAACG,EAAA,EAAO,CAACC,GAAI,WAAaP,EAAMQ,IAAKR,EAAMS,QCClCC,EAJC,SAACV,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEP,SAAUE,EAAMF,kBC2BrCa,EAAmBC,YAAU,CACjCC,KAAM,yBADiBD,CAlBL,SAACZ,GACnB,IAAIc,EAAeC,YAAiB,KACpC,OACEd,EAAAC,EAAAC,cAAA,QAAMa,SAAUhB,EAAMiB,cACpBhB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACe,EAAA,EAAK,CACJT,KAAM,iBACNU,YAAa,qBACbC,UAAWC,IACXC,SAAU,CAACC,IAAUT,MAGzBb,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,iCAgCOqB,EAxBC,SAACxB,GACf,IAAIyB,EAAiBzB,EAAM0B,YAAYjC,QAAQkC,IAAI,SAACC,GAAC,OACnD3B,EAAAC,EAAAC,cAAC0B,EAAM,CAACpB,KAAMmB,EAAEnB,KAAMqB,IAAKF,EAAEpB,GAAIA,GAAIoB,EAAEpB,OAGrCuB,EAAkB/B,EAAM0B,YAAY7B,SAAS8B,IAAI,SAACK,GAAC,OACrD/B,EAAAC,EAAAC,cAAC8B,EAAO,CAACnC,QAASkC,EAAElC,QAASgC,IAAKE,EAAExB,OAOtC,OACEP,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEZ,SAChBQ,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEX,aAAc+B,GAChCxB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAER,UAChBI,EAAAC,EAAAC,cAACQ,EAAgB,CAACK,SARF,SAACkB,GACrBlC,EAAMmC,WAAWD,EAAOE,mBAQnBL,KCjCMM,sBACbC,YAdsB,SAACC,GACvB,MAAO,CACLb,YAAaa,EAAMb,cAGI,SAACc,GAC1B,MAAO,CACLL,WAAY,SAACC,GACXI,EAASC,YAAwBL,QAOrCM,IAFaL,CAGbb","file":"static/js/2.625da990.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2kKpQ\",\"dialogsItem\":\"Dialogs_dialogsItem__C1reX\",\"active\":\"Dialogs_active__3HmG1\",\"dialog\":\"Dialogs_dialog__RSNfL\",\"messages\":\"Dialogs_messages__2a8jx\",\"message\":\"Dialogs_message__1SO_m\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst Dialog = (props) => {\r\n  return (\r\n    <div className={s.dialog}>\r\n      <NavLink to={\"dialogs/\" + props.id}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialog;\r\n","import React from \"react\";\r\n\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return <div className={s.message}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\n\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\nimport { Textarea } from \"./../common/formsControl/FormsControl\";\r\n\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from \"./../../utils/validators/validators\";\r\n\r\nconst DialogsForm = (props) => {\r\n  let maxLength300 = maxLengthCreator(300);\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          name={\"newMessageBody\"}\r\n          placeholder={\"Enter your message\"}\r\n          component={Textarea}\r\n          validate={[required, maxLength300]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add Message</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nconst DialogsReduxForm = reduxForm({\r\n  form: \"dialogAddMessagesForm\",\r\n})(DialogsForm);\r\nconst Dialogs = (props) => {\r\n  let dialogsElement = props.dialogsPage.dialogs.map((d) => (\r\n    <Dialog name={d.name} key={d.id} id={d.id} />\r\n  ));\r\n\r\n  let messageElements = props.dialogsPage.messages.map((m) => (\r\n    <Message message={m.message} key={m.id} />\r\n  ));\r\n\r\n  const addNewMessage = (values) => {\r\n    props.AddMessage(values.newMessageBody);\r\n  };\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItem}>{dialogsElement}</div>\r\n      <div className={s.messages}>\r\n        <DialogsReduxForm onSubmit={addNewMessage} />\r\n        {messageElements}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport withAuthRedirectComponent from \"../../hoc/AuthRedirect\";\r\nimport { AddMessageActionCreater } from \"../../redux/dialogsReduser\";\r\n\r\nimport Dialogs from \"./Dialogs\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    AddMessage: (newMessageBody) => {\r\n      dispatch(AddMessageActionCreater(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirectComponent\r\n)(Dialogs);\r\n"],"sourceRoot":""}